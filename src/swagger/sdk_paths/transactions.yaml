openapi: 3.0.0
info:
  title: SDK Transactions API
  description: |
    # Overview
    This API provides endpoints for managing customer transactions in the loyalty system.
    It allows customers to:
    - View their transaction history
    - Get detailed transaction information
    - View transaction summaries
    
    # Authentication
    All endpoints require SDK authentication via the SDK API Key and customer ID. Include these in your request headers:
    ```
    sdk-api-key: your-api-key
    customer_id: CUSTOMER_ID
    ```
    
    # Rate Limiting
    - 100 requests per minute per API key
    - 1000 requests per hour per API key
    
    # Error Handling
    All endpoints follow a consistent error response format:
    ```json
    {
      "status": false,
      "message": "Error description",
      "error": {
        "code": "ERROR_CODE",
        "details": {}
      }
    }
    ```
  version: 1.0.0
tags:
  - name: SDK Transactions
    description: SDK APIs for customer transaction operations

paths:
  /transactions:
    get:
      summary: Get all transactions for authenticated customer
      description: |
        # Description
        Retrieves the transaction history for the authenticated customer with pagination and filtering options.
        
        # Features
        - Pagination support
        - Transaction type filtering
        - Date range filtering
        - Sorting options
        
        # Query Parameters
        - page: Page number (default: 1)
        - limit: Items per page (default: 10)
        - type: Filter by transaction type (earn/redeem/all)
        - start_date: Filter by start date
        - end_date: Filter by end date
        - sort: Sorting field (date, points, amount)
        - sort_direction: Sorting direction (asc, desc)
        
        # Example Usage
        ```javascript
        // Get all transactions
        GET /transactions
        
        // Get transactions with filters
        GET /transactions?type=earn&start_date=2024-01-01&end_date=2024-03-20&page=1&limit=20&sort=date&sort_direction=desc
        ```
      tags:
        - SDK Transactions
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: "Page number for pagination"
          example: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: "Number of items per page"
          example: 10
        - name: type
          in: query
          schema:
            type: string
            enum: [earn, redeem, all]
            default: all
          description: "Filter by transaction type"
          example: "earn"
        - name: start_date
          in: query
          schema:
            type: string
            format: date
          description: "Filter by start date (YYYY-MM-DD)"
          example: "2024-01-01"
        - name: end_date
          in: query
          schema:
            type: string
            format: date
          description: "Filter by end date (YYYY-MM-DD)"
          example: "2024-03-20"
        - name: sort
          in: query
          schema:
            type: string
            enum: [date, points, amount]
            default: date
          description: "Sorting field"
          example: "date"
        - name: sort_direction
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          description: "Sorting direction"
          example: "desc"
      responses:
        200:
          description: "Transactions retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Transactions retrieved successfully"
                  data:
                    type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "507f1f77bcf86cd799439011"
                            transaction_id:
                              type: string
                              example: "TRX-12345"
                            transaction_type:
                              type: string
                              enum: [earn, redeem]
                              example: "earn"
                            points:
                              type: number
                              example: 100
                            amount:
                              type: number
                              example: 50.25
                            currency:
                              type: string
                              example: "USD"
                            description:
                              type: string
                              example: "Purchase at Store A"
                            reference_id:
                              type: string
                              example: "ORD-5678"
                            transaction_date:
                              type: string
                              format: date-time
                              example: "2024-03-15T10:30:00Z"
                            merchant:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: "Store A"
                                logo:
                                  type: string
                                  example: "https://example.com/store-a-logo.png"
                            status:
                              type: string
                              enum: [completed, pending, cancelled]
                              example: "completed"
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                            example: 50
                          page:
                            type: integer
                            example: 1
                          limit:
                            type: integer
                            example: 10
                          total_pages:
                            type: integer
                            example: 5
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error"

  /transactions/{transaction_id}:
    get:
      summary: Get specific transaction details
      description: |
        # Description
        Retrieves detailed information about a specific transaction.
        
        # Features
        - Complete transaction details
        - Associated points information
        - Referenced entity details (e.g., order information)
        
        # Path Parameters
        - transaction_id: Unique transaction identifier
        
        # Example Usage
        ```javascript
        GET /transactions/TRX-12345
        ```
      tags:
        - SDK Transactions
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: transaction_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique transaction identifier"
          example: "TRX-12345"
      responses:
        200:
          description: "Transaction details retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Transaction details retrieved successfully"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "507f1f77bcf86cd799439011"
                      transaction_id:
                        type: string
                        example: "TRX-12345"
                      transaction_type:
                        type: string
                        enum: [earn, redeem]
                        example: "earn"
                      points:
                        type: number
                        example: 100
                      amount:
                        type: number
                        example: 50.25
                      currency:
                        type: string
                        example: "USD"
                      description:
                        type: string
                        example: "Purchase at Store A"
                      reference_id:
                        type: string
                        example: "ORD-5678"
                      transaction_date:
                        type: string
                        format: date-time
                        example: "2024-03-15T10:30:00Z"
                      merchant:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: "507f1f77bcf86cd799439022"
                          name:
                            type: string
                            example: "Store A"
                          logo:
                            type: string
                            example: "https://example.com/store-a-logo.png"
                          address:
                            type: string
                            example: "123 Main St, City"
                      customer:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: "507f1f77bcf86cd799439033"
                          name:
                            type: string
                            example: "John Doe"
                          customer_id:
                            type: string
                            example: "CUST-001"
                      status:
                        type: string
                        enum: [completed, pending, cancelled]
                        example: "completed"
                      points_details:
                        type: object
                        properties:
                          points_before:
                            type: number
                            example: 500
                          points_after:
                            type: number
                            example: 600
                          points_balance:
                            type: number
                            example: 600
                      referenced_entity:
                        type: object
                        properties:
                          type:
                            type: string
                            enum: [order, offer, coupon]
                            example: "order"
                          details:
                            type: object
                            properties:
                              order_id:
                                type: string
                                example: "ORD-5678"
                              items:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      example: "Product A"
                                    quantity:
                                      type: integer
                                      example: 2
                                    price:
                                      type: number
                                      example: 25.12
                              total:
                                type: number
                                example: 50.25
                      metadata:
                        type: object
                        example: {
                          "payment_method": "credit_card",
                          "store_id": "STORE-001"
                        }
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        404:
          description: "Transaction not found"
        500:
          description: "Internal Server Error"

  /transactions/summary:
    get:
      summary: Get transaction summary
      description: |
        # Description
        Retrieves a summary of transactions for the authenticated customer within a specified date range.
        
        # Features
        - Summary by transaction type
        - Points earned and redeemed
        - Date range filtering
        - Totals and averages
        
        # Query Parameters
        - start_date: Start date for the summary period (YYYY-MM-DD)
        - end_date: End date for the summary period (YYYY-MM-DD)
        
        # Example Usage
        ```javascript
        GET /transactions/summary?start_date=2024-01-01&end_date=2024-03-20
        ```
      tags:
        - SDK Transactions
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date
          description: "Start date for the summary period (YYYY-MM-DD)"
          example: "2024-01-01"
        - name: end_date
          in: query
          schema:
            type: string
            format: date
          description: "End date for the summary period (YYYY-MM-DD)"
          example: "2024-03-20"
      responses:
        200:
          description: "Transaction summary retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Transaction summary retrieved successfully"
                  data:
                    type: object
                    properties:
                      date_range:
                        type: object
                        properties:
                          start_date:
                            type: string
                            format: date
                            example: "2024-01-01"
                          end_date:
                            type: string
                            format: date
                            example: "2024-03-20"
                      summary_by_type:
                        type: object
                        properties:
                          earn:
                            type: object
                            properties:
                              transaction_count:
                                type: integer
                                example: 15
                              total_points:
                                type: number
                                example: 1500
                              total_amount:
                                type: number
                                example: 750.25
                          redeem:
                            type: object
                            properties:
                              transaction_count:
                                type: integer
                                example: 5
                              total_points:
                                type: number
                                example: 500
                              total_amount:
                                type: number
                                example: 250.75
                      points_summary:
                        type: object
                        properties:
                          total_earned:
                            type: number
                            example: 1500
                          total_redeemed:
                            type: number
                            example: 500
                          net_change:
                            type: number
                            example: 1000
                      monthly_breakdown:
                        type: array
                        items:
                          type: object
                          properties:
                            month:
                              type: string
                              example: "2024-01"
                            points_earned:
                              type: number
                              example: 500
                            points_redeemed:
                              type: number
                              example: 200
                            transaction_count:
                              type: integer
                              example: 7
                      average_per_transaction:
                        type: object
                        properties:
                          points:
                            type: number
                            example: 100
                          amount:
                            type: number
                            example: 50.05
                      top_merchants:
                        type: array
                        items:
                          type: object
                          properties:
                            merchant:
                              type: string
                              example: "Store A"
                            transaction_count:
                              type: integer
                              example: 8
                            total_points:
                              type: number
                              example: 800
                            total_amount:
                              type: number
                              example: 400.50
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error" 