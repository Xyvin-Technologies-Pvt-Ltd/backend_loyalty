openapi: 3.0.0
info:
  title: Point Criteria API
  description: |
    # Overview
    This API provides endpoints for managing point criteria and processing loyalty events in the system. It allows:
    - Processing loyalty events and calculating earned points
    - Checking customer eligibility
    - Managing point criteria rules

    # Features
    - Point calculation based on criteria
    - Transaction recording
    - Customer balance updates
    - Expiry date calculation
  version: 1.0.0
tags:
  - name: Point Criteria
    description: APIs for point criteria and calculation operations

paths:
  /point-criteria/process:
    post:
      summary: Process loyalty event and calculate points
      description: |
        # Description
        Process a loyalty event and calculate earned points based on active criteria.

        # Features
        - Point calculation based on criteria
        - Transaction recording
        - Customer balance update
        - Expiry date calculation

        # Request Body
        - criteria_code: Code identifying the point criteria to apply
        - paymentMethod: Payment method used
        - customerId: ID of the customer
        - transactionValue: Value of the transaction
        - metadata: Additional event-specific data
        - reference_id: External reference ID for the transaction
        - app_type: Type of application

        # Example Usage
        ```javascript
        POST /point-criteria/process
        {
          "criteria_code": "PURCHASE_100",
          "paymentMethod": "credit_card",
          "customerId": "507f1f77bcf86cd799439011",
          "transactionValue": 100.50,
          "metadata": {
            "store_id": "STORE-001",
            "items": [
              {"id": "PROD-001", "price": 50.25, "quantity": 2}
            ]
          },
          "reference_id": "ORD-12345",
          "app_type": "Khedmah Delivery"
        }
        ```
      tags:
        - Point Criteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - criteria_code
                - paymentMethod
                - customerId
                - transactionValue
                - reference_id
                - app_type
              properties:
                criteria_code:
                  type: string
                  description: "Code identifying the point criteria to apply"
                  example: "PURCHASE_100"
                paymentMethod:
                  type: string
                  description: "Payment method used"
                  example: "credit_card"
                customerId:
                  type: string
                  description: "ID of the customer"
                  example: "507f1f77bcf86cd799439011"
                transactionValue:
                  type: number
                  description: "Value of the transaction"
                  example: 100.50
                metadata:
                  type: object
                  description: "Additional event-specific data"
                  example: { "store_id": "STORE-001", "items": [{ "id": "PROD-001", "price": 50.25, "quantity": 2 }] }
                reference_id:
                  type: string
                  description: "External reference ID for the transaction"
                  example: "ORD-12345"
                app_type:
                  type: string
                  description: "Type of application"
                  example: "Khedmah Delivery"
      responses:
        200:
          description: "Loyalty points processed successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Loyalty points processed successfully"
                  data:
                    type: object
                    properties:
                      pointsAwarded:
                        type: number
                        example: 125
                      calculationDetails:
                        type: object
                        description: "Details of the point calculation"
                        example: { "basePoints": 100, "bonusPoints": 25, "criteriaApplied": "PURCHASE_100" }
        400:
          description: |
            Bad Request
            Possible reasons:
            - Customer not found
            - Invalid criteria code
            - Customer not eligible for points
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Customer not eligible for points"
                  data:
                    type: object
                    properties:
                      details:
                        type: object
                        description: "Additional error details"
        404:
          description: "No point criteria found for this event"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "No point criteria found for this event"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error processing loyalty event"

  /point-criteria/check-eligibility:
    get:
      summary: Check customer eligibility based on usage history
      description: |
        # Description
        Check if a customer is eligible for earning points based on their usage history and loyalty program rules.

        # Features
        - Frequency limit validation
        - Daily/weekly/monthly limit validation
        - Customer-specific rule validation

        # Query Parameters
        - event_type: Type of loyalty event to check eligibility for

        # Example Usage
        ```javascript
        GET /point-criteria/check-eligibility?event_type=purchase
        ```
      tags:
        - SDK Point Criteria
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: event_type
          in: query
          required: true
          schema:
            type: string
          description: "Type of loyalty event to check eligibility for"
          example: "purchase"
      responses:
        200:
          description: "Eligibility check completed successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Eligibility check completed successfully"
                  data:
                    type: object
                    properties:
                      eligible:
                        type: boolean
                        example: true
                      reason:
                        type: string
                        example: "Customer is eligible for points"
                      usage_statistics:
                        type: object
                        properties:
                          today:
                            type: number
                            example: 2
                          this_week:
                            type: number
                            example: 5
                          this_month:
                            type: number
                            example: 10
                      limits:
                        type: object
                        properties:
                          daily:
                            type: number
                            example: 5
                          weekly:
                            type: number
                            example: 20
                          monthly:
                            type: number
                            example: 50
        400:
          description: "Invalid event type"
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error"

  /point-criteria/calculate-details:
    get:
      summary: Get point calculation details without processing
      description: |
        # Description
        Calculate potential points for a hypothetical event without actually processing it or updating customer balance.

        # Features
        - Preview point calculation
        - View applicable criteria and bonuses
        - No database changes

        # Query Parameters
        - event_type: Type of loyalty event
        - amount: Transaction amount (for purchase events)
        - payment_method: Payment method used (for purchase events)

        # Example Usage
        ```javascript
        GET /point-criteria/calculate-details?event_type=purchase&amount=100.50&payment_method=credit_card
        ```
      tags:
        - SDK Point Criteria
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: event_type
          in: query
          required: true
          schema:
            type: string
          description: "Type of loyalty event"
          example: "purchase"
        - name: amount
          in: query
          schema:
            type: number
          description: "Transaction amount (for purchase events)"
          example: 100.50
        - name: payment_method
          in: query
          schema:
            type: string
          description: "Payment method used (for purchase events)"
          example: "credit_card"
      responses:
        200:
          description: "Point calculation details retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Point calculation details retrieved successfully"
                  data:
                    type: object
                    properties:
                      potential_points:
                        type: number
                        example: 125
                      base_points:
                        type: number
                        example: 100
                      bonus_points:
                        type: number
                        example: 25
                      applicable_criteria:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "507f1f77bcf86cd799439022"
                            name:
                              type: string
                              example: "Standard Purchase Points"
                            points:
                              type: number
                              example: 100
                            description:
                              type: string
                              example: "Base points for purchase"
                      applicable_bonuses:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "507f1f77bcf86cd799439033"
                            name:
                              type: string
                              example: "Credit Card Bonus"
                            multiplier:
                              type: number
                              example: 1.25
                            bonus_points:
                              type: number
                              example: 25
                            description:
                              type: string
                              example: "25% bonus for credit card payment"
        400:
          description: "Invalid event type or parameters"
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error"

  /point-criteria/payment-methods:
    get:
      summary: Get supported payment methods
      description: |
        # Description
        Retrieve a list of supported payment methods for point earnings, including any bonuses associated with each method.

        # Features
        - List of supported payment methods
        - Bonus information for each method
        - Active status indication

        # Example Usage
        ```javascript
        GET /point-criteria/payment-methods
        ```
      tags:
        - SDK Point Criteria
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      responses:
        200:
          description: "Payment methods retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Payment methods retrieved successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "507f1f77bcf86cd799439044"
                        name:
                          type: string
                          example: "Credit Card"
                        code:
                          type: string
                          example: "credit_card"
                        bonus_multiplier:
                          type: number
                          example: 1.25
                        description:
                          type: string
                          example: "25% bonus for credit card payments"
                        is_active:
                          type: boolean
                          example: true
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error"
