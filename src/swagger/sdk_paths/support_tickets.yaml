openapi: 3.0.0
info:
  title: SDK Support Tickets API
  description: |
    # Overview
    This API provides endpoints for managing customer support tickets in the loyalty system.
    It allows customers to:
    - Create support tickets
    - View their tickets
    - Add messages to tickets
    - Close and reopen tickets
    
    # Authentication
    All endpoints require SDK authentication via the SDK API Key and customer ID. Include these in your request headers:
    ```
    sdk-api-key: your-api-key
    customer_id: CUSTOMER_ID
    ```
    
    # Rate Limiting
    - 100 requests per minute per API key
    - 1000 requests per hour per API key
    
    # Error Handling
    All endpoints follow a consistent error response format:
    ```json
    {
      "status": false,
      "message": "Error description",
      "error": {
        "code": "ERROR_CODE",
        "details": {}
      }
    }
    ```
  version: 1.0.0
tags:
  - name: SDK Support Tickets
    description: SDK APIs for customer support ticket operations

paths:
  /support:
    post:
      summary: Create new support ticket
      description: |
        # Description
        Creates a new support ticket for the authenticated customer.
        
        # Features
        - Multiple category support
        - Priority levels
        - File attachments (optional)
        - Automatic ticket ID generation
        
        # Request Body
        - subject: Ticket subject
        - message: Initial message content
        - category: Support category
        - priority: Ticket priority level
        - attachments: Optional file attachments
        
        # Example Usage
        ```javascript
        POST /support
        {
          "subject": "Points not credited",
          "message": "I made a purchase but my points were not credited to my account.",
          "category": "points",
          "priority": "medium",
          "attachments": []
        }
        ```
      tags:
        - SDK Support Tickets
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject
                - message
                - category
              properties:
                subject:
                  type: string
                  description: "Ticket subject"
                  example: "Points not credited"
                message:
                  type: string
                  description: "Initial message content"
                  example: "I made a purchase but my points were not credited to my account."
                category:
                  type: string
                  description: "Support category"
                  example: "points"
                priority:
                  type: string
                  enum: [low, medium, high]
                  default: medium
                  description: "Ticket priority level"
                  example: "medium"
                attachments:
                  type: array
                  description: "Optional file attachments"
                  items:
                    type: string
                    format: binary
                  example: []
      responses:
        201:
          description: "Support ticket created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Support ticket created successfully"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "507f1f77bcf86cd799439011"
                      ticket_id:
                        type: string
                        example: "TKT-12345"
                      subject:
                        type: string
                        example: "Points not credited"
                      category:
                        type: string
                        example: "points"
                      status:
                        type: string
                        enum: [open, closed]
                        example: "open"
                      priority:
                        type: string
                        enum: [low, medium, high]
                        example: "medium"
                      customer:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: "507f1f77bcf86cd799439022"
                          name:
                            type: string
                            example: "John Doe"
                      created_at:
                        type: string
                        format: date-time
                        example: "2024-03-15T10:30:00Z"
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            content:
                              type: string
                              example: "I made a purchase but my points were not credited to my account."
                            sender_type:
                              type: string
                              enum: [customer, support]
                              example: "customer"
                            created_at:
                              type: string
                              format: date-time
                              example: "2024-03-15T10:30:00Z"
                            attachments:
                              type: array
                              items:
                                type: string
                              example: []
        400:
          description: |
            Bad Request
            Possible reasons:
            - Missing required fields
            - Invalid category
            - Invalid priority
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Missing required fields"
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error"
    get:
      summary: Get all tickets for authenticated customer
      description: |
        # Description
        Retrieves all support tickets for the authenticated customer with pagination and filtering options.
        
        # Features
        - Pagination support
        - Status filtering
        - Category filtering
        - Sorting options
        
        # Query Parameters
        - page: Page number (default: 1)
        - limit: Items per page (default: 10)
        - status: Filter by ticket status (open/closed)
        - category: Filter by ticket category
        - sort: Sorting field (created_at, updated_at, priority)
        - sort_direction: Sorting direction (asc, desc)
        
        # Example Usage
        ```javascript
        // Get all tickets
        GET /support
        
        // Get tickets with filters
        GET /support?status=open&category=points&page=1&limit=20&sort=created_at&sort_direction=desc
        ```
      tags:
        - SDK Support Tickets
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: "Page number for pagination"
          example: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: "Number of items per page"
          example: 10
        - name: status
          in: query
          schema:
            type: string
            enum: [open, closed, all]
            default: all
          description: "Filter by ticket status"
          example: "open"
        - name: category
          in: query
          schema:
            type: string
          description: "Filter by ticket category"
          example: "points"
        - name: sort
          in: query
          schema:
            type: string
            enum: [created_at, updated_at, priority]
            default: created_at
          description: "Sorting field"
          example: "created_at"
        - name: sort_direction
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          description: "Sorting direction"
          example: "desc"
      responses:
        200:
          description: "Tickets retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Tickets retrieved successfully"
                  data:
                    type: object
                    properties:
                      tickets:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "507f1f77bcf86cd799439011"
                            ticket_id:
                              type: string
                              example: "TKT-12345"
                            subject:
                              type: string
                              example: "Points not credited"
                            category:
                              type: string
                              example: "points"
                            status:
                              type: string
                              enum: [open, closed]
                              example: "open"
                            priority:
                              type: string
                              enum: [low, medium, high]
                              example: "medium"
                            last_message:
                              type: object
                              properties:
                                content:
                                  type: string
                                  example: "I made a purchase but my points were not credited to my account."
                                sender_type:
                                  type: string
                                  enum: [customer, support]
                                  example: "customer"
                                created_at:
                                  type: string
                                  format: date-time
                                  example: "2024-03-15T10:30:00Z"
                            created_at:
                              type: string
                              format: date-time
                              example: "2024-03-15T10:30:00Z"
                            updated_at:
                              type: string
                              format: date-time
                              example: "2024-03-15T10:30:00Z"
                            message_count:
                              type: integer
                              example: 1
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                            example: 15
                          page:
                            type: integer
                            example: 1
                          limit:
                            type: integer
                            example: 10
                          total_pages:
                            type: integer
                            example: 2
                      categories:
                        type: array
                        items:
                          type: string
                        example: ["points", "account", "technical", "other"]
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error"

  /support/{ticket_id}:
    get:
      summary: Get specific ticket details
      description: |
        # Description
        Retrieves detailed information about a specific support ticket, including all messages.
        
        # Features
        - Complete ticket details
        - All ticket messages
        - Attachment information
        - Status history
        
        # Path Parameters
        - ticket_id: Unique ticket identifier
        
        # Example Usage
        ```javascript
        GET /support/TKT-12345
        ```
      tags:
        - SDK Support Tickets
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: ticket_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique ticket identifier"
          example: "TKT-12345"
      responses:
        200:
          description: "Ticket details retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Ticket details retrieved successfully"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "507f1f77bcf86cd799439011"
                      ticket_id:
                        type: string
                        example: "TKT-12345"
                      subject:
                        type: string
                        example: "Points not credited"
                      category:
                        type: string
                        example: "points"
                      status:
                        type: string
                        enum: [open, closed]
                        example: "open"
                      priority:
                        type: string
                        enum: [low, medium, high]
                        example: "medium"
                      customer:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: "507f1f77bcf86cd799439022"
                          name:
                            type: string
                            example: "John Doe"
                          email:
                            type: string
                            example: "john@example.com"
                      created_at:
                        type: string
                        format: date-time
                        example: "2024-03-15T10:30:00Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2024-03-15T10:30:00Z"
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "507f1f77bcf86cd799439033"
                            content:
                              type: string
                              example: "I made a purchase but my points were not credited to my account."
                            sender:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: "John Doe"
                                type:
                                  type: string
                                  enum: [customer, support]
                                  example: "customer"
                            created_at:
                              type: string
                              format: date-time
                              example: "2024-03-15T10:30:00Z"
                            attachments:
                              type: array
                              items:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                    example: "507f1f77bcf86cd799439044"
                                  filename:
                                    type: string
                                    example: "screenshot.jpg"
                                  url:
                                    type: string
                                    example: "https://example.com/attachments/screenshot.jpg"
                                  size:
                                    type: number
                                    example: 52428
                                  mime_type:
                                    type: string
                                    example: "image/jpeg"
                      status_history:
                        type: array
                        items:
                          type: object
                          properties:
                            status:
                              type: string
                              enum: [open, closed]
                              example: "open"
                            changed_at:
                              type: string
                              format: date-time
                              example: "2024-03-15T10:30:00Z"
                            changed_by:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: "John Doe"
                                type:
                                  type: string
                                  enum: [customer, support]
                                  example: "customer"
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        404:
          description: "Ticket not found"
        500:
          description: "Internal Server Error"

  /support/{ticket_id}/messages:
    post:
      summary: Add message to ticket
      description: |
        # Description
        Adds a new message to an existing support ticket.
        
        # Features
        - Text message support
        - File attachments (optional)
        - Automatic timestamp
        
        # Path Parameters
        - ticket_id: Unique ticket identifier
        
        # Request Body
        - message: Message content
        - attachments: Optional file attachments
        
        # Example Usage
        ```javascript
        POST /support/TKT-12345/messages
        {
          "message": "I still haven't received my points. The order number is #ORD-5678.",
          "attachments": []
        }
        ```
      tags:
        - SDK Support Tickets
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: ticket_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique ticket identifier"
          example: "TKT-12345"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  description: "Message content"
                  example: "I still haven't received my points. The order number is #ORD-5678."
                attachments:
                  type: array
                  description: "Optional file attachments"
                  items:
                    type: string
                    format: binary
                  example: []
      responses:
        200:
          description: "Message added successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Message added successfully"
                  data:
                    type: object
                    properties:
                      ticket_id:
                        type: string
                        example: "TKT-12345"
                      new_message:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: "507f1f77bcf86cd799439033"
                          content:
                            type: string
                            example: "I still haven't received my points. The order number is #ORD-5678."
                          sender:
                            type: object
                            properties:
                              name:
                                type: string
                                example: "John Doe"
                              type:
                                type: string
                                enum: [customer, support]
                                example: "customer"
                          created_at:
                            type: string
                            format: date-time
                            example: "2024-03-16T11:45:00Z"
                          attachments:
                            type: array
                            items:
                              type: object
                              properties:
                                _id:
                                  type: string
                                  example: "507f1f77bcf86cd799439044"
                                filename:
                                  type: string
                                  example: "screenshot.jpg"
                                url:
                                  type: string
                                  example: "https://example.com/attachments/screenshot.jpg"
                                size:
                                  type: number
                                  example: 52428
                                mime_type:
                                  type: string
                                  example: "image/jpeg"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2024-03-16T11:45:00Z"
        400:
          description: "Message content is required"
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        404:
          description: "Ticket not found"
        500:
          description: "Internal Server Error"

  /support/{ticket_id}/close:
    post:
      summary: Close ticket
      description: |
        # Description
        Closes an open support ticket.
        
        # Features
        - Status update to closed
        - Optional closing message
        - Status history tracking
        
        # Path Parameters
        - ticket_id: Unique ticket identifier
        
        # Request Body
        - closing_message: Optional message explaining why the ticket is being closed
        
        # Example Usage
        ```javascript
        POST /support/TKT-12345/close
        {
          "closing_message": "My issue has been resolved. Thank you for your help."
        }
        ```
      tags:
        - SDK Support Tickets
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: ticket_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique ticket identifier"
          example: "TKT-12345"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                closing_message:
                  type: string
                  description: "Optional message explaining why the ticket is being closed"
                  example: "My issue has been resolved. Thank you for your help."
      responses:
        200:
          description: "Ticket closed successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Ticket closed successfully"
                  data:
                    type: object
                    properties:
                      ticket_id:
                        type: string
                        example: "TKT-12345"
                      new_status:
                        type: string
                        example: "closed"
                      closed_at:
                        type: string
                        format: date-time
                        example: "2024-03-16T12:30:00Z"
                      new_message:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: "507f1f77bcf86cd799439033"
                          content:
                            type: string
                            example: "My issue has been resolved. Thank you for your help."
                          sender:
                            type: object
                            properties:
                              name:
                                type: string
                                example: "John Doe"
                              type:
                                type: string
                                enum: [customer, support]
                                example: "customer"
                          created_at:
                            type: string
                            format: date-time
                            example: "2024-03-16T12:30:00Z"
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        404:
          description: "Ticket not found"
        409:
          description: "Ticket is already closed"
        500:
          description: "Internal Server Error"

  /support/{ticket_id}/reopen:
    post:
      summary: Reopen ticket
      description: |
        # Description
        Reopens a previously closed support ticket.
        
        # Features
        - Status update to open
        - Optional reopening message
        - Status history tracking
        
        # Path Parameters
        - ticket_id: Unique ticket identifier
        
        # Request Body
        - reopening_message: Optional message explaining why the ticket is being reopened
        
        # Example Usage
        ```javascript
        POST /support/TKT-12345/reopen
        {
          "reopening_message": "The issue has occurred again."
        }
        ```
      tags:
        - SDK Support Tickets
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: ticket_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique ticket identifier"
          example: "TKT-12345"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reopening_message:
                  type: string
                  description: "Optional message explaining why the ticket is being reopened"
                  example: "The issue has occurred again."
      responses:
        200:
          description: "Ticket reopened successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Ticket reopened successfully"
                  data:
                    type: object
                    properties:
                      ticket_id:
                        type: string
                        example: "TKT-12345"
                      new_status:
                        type: string
                        example: "open"
                      reopened_at:
                        type: string
                        format: date-time
                        example: "2024-03-17T14:15:00Z"
                      new_message:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: "507f1f77bcf86cd799439033"
                          content:
                            type: string
                            example: "The issue has occurred again."
                          sender:
                            type: object
                            properties:
                              name:
                                type: string
                                example: "John Doe"
                              type:
                                type: string
                                enum: [customer, support]
                                example: "customer"
                          created_at:
                            type: string
                            format: date-time
                            example: "2024-03-17T14:15:00Z"
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        404:
          description: "Ticket not found"
        409:
          description: "Ticket is already open"
        500:
          description: "Internal Server Error" 