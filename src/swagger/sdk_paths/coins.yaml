openapi: 3.0.0
info:
  title: SDK Coins API
  description: |
    # Overview
    This API provides endpoints for managing customer coins in the loyalty system. Coins are a virtual currency
    that can be earned by converting loyalty points and used for various rewards or purchases.
    
    # Authentication
    All endpoints require SDK authentication via the SDK API Key and customer ID. Include these in your request headers:
    ```
    sdk-api-key: your-api-key
    customer_id: CUSTOMER_ID
    ```
    
    # Rate Limiting
    - 100 requests per minute per API key
    - 1000 requests per hour per API key
    
    # Error Handling
    All endpoints follow a consistent error response format:
    ```json
    {
      "status": false,
      "message": "Error description",
      "error": {
        "code": "ERROR_CODE",
        "details": {}
      }
    }
    ```
  version: 1.0.0
tags:
  - name: SDK Coins
    description: SDK APIs for customer coins operations

paths:
  /coins/convert:
    post:
      summary: Convert points to coins
      description: |
        # Description
        Convert a specified amount of loyalty points into coins.
        
        # Features
        - Points validation
        - Automatic conversion based on configured rate
        - Transaction recording
        
        # Request Body
        - points: Number of points to convert
        
        # Example Usage
        ```javascript
        POST /coins/convert
        {
          "points": 1000
        }
        ```
      tags:
        - SDK Coins
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - points
              properties:
                points:
                  type: number
                  description: "Number of points to convert to coins"
                  example: 1000
      responses:
        200:
          description: "Points successfully converted to coins"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Points successfully converted to coins"
                  data:
                    type: object
                    properties:
                      conversion:
                        type: object
                        properties:
                          points_used:
                            type: number
                            example: 1000
                          coins_earned:
                            type: number
                            example: 10
                          conversion_rate:
                            type: number
                            example: 100
                          transaction_id:
                            type: string
                            example: "507f1f77bcf86cd799439011"
                      new_balances:
                        type: object
                        properties:
                          points_balance:
                            type: number
                            example: 2000
                          coins_balance:
                            type: number
                            example: 25
        400:
          description: |
            Bad Request
            Possible reasons:
            - Insufficient points balance
            - Invalid points amount
            - Minimum points requirement not met
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Insufficient points balance"
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error"

  /coins/convert-details:
    get:
      summary: Get coin conversion details
      description: |
        # Description
        Get details about the points-to-coins conversion, including the current conversion rate and minimum requirements.
        
        # Features
        - Current conversion rate
        - Minimum points required for conversion
        - Estimated coins for provided points
        
        # Example Usage
        ```javascript
        GET /coins/convert-details
        ```
      tags:
        - SDK Coins
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      responses:
        200:
          description: "Coin conversion details retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Coin conversion details retrieved successfully"
                  data:
                    type: object
                    properties:
                      conversion_rate:
                        type: number
                        description: "Points required for 1 coin"
                        example: 100
                      minimum_points:
                        type: number
                        description: "Minimum points required for conversion"
                        example: 500
                      customer_points_balance:
                        type: number
                        description: "Current customer points balance"
                        example: 3000
                      customer_coins_balance:
                        type: number
                        description: "Current customer coins balance"
                        example: 15
                      max_possible_conversion:
                        type: object
                        description: "Maximum possible conversion with current balance"
                        properties:
                          points:
                            type: number
                            example: 3000
                          coins:
                            type: number
                            example: 30
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error"

  /coins/history:
    get:
      summary: Get coin transaction history
      description: |
        # Description
        Retrieves the coin transaction history for the authenticated customer with pagination and filtering options.
        
        # Features
        - Pagination support
        - Transaction type filtering
        - Date range filtering
        - Sorted by transaction date (newest first)
        
        # Query Parameters
        - page: Page number (default: 1)
        - limit: Items per page (default: 10)
        - type: Filter by transaction type (earn/spend/all)
        - start_date: Filter by start date
        - end_date: Filter by end date
        
        # Example Usage
        ```javascript
        // Get all coin history
        GET /coins/history
        
        // Get coin history with filters
        GET /coins/history?type=earn&start_date=2024-01-01&end_date=2024-03-20&page=1&limit=20
        ```
      tags:
        - SDK Coins
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: "Page number for pagination"
          example: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: "Number of items per page"
          example: 10
        - name: type
          in: query
          schema:
            type: string
            enum: [earn, spend, all]
            default: all
          description: "Filter by transaction type"
          example: "earn"
        - name: start_date
          in: query
          schema:
            type: string
            format: date
          description: "Filter by start date (YYYY-MM-DD)"
          example: "2024-01-01"
        - name: end_date
          in: query
          schema:
            type: string
            format: date
          description: "Filter by end date (YYYY-MM-DD)"
          example: "2024-03-20"
      responses:
        200:
          description: "Coin history retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Coin history retrieved successfully"
                  data:
                    type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "507f1f77bcf86cd799439011"
                            transaction_type:
                              type: string
                              enum: [earn, spend]
                              example: "earn"
                            coins:
                              type: number
                              example: 10
                            description:
                              type: string
                              example: "Converted from 1000 points"
                            transaction_date:
                              type: string
                              format: date-time
                              example: "2024-03-20T10:00:00Z"
                            reference_id:
                              type: string
                              example: "CONV-12345"
                            balance_after:
                              type: number
                              example: 25
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                            example: 50
                          page:
                            type: integer
                            example: 1
                          limit:
                            type: integer
                            example: 10
                          total_pages:
                            type: integer
                            example: 5
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error"

  /coins/balance:
    get:
      summary: Get current coin balance
      description: |
        # Description
        Retrieves the current coin balance for the authenticated customer.
        
        # Features
        - Current coin balance
        - Recent transactions
        - Available conversions
        
        # Example Usage
        ```javascript
        GET /coins/balance
        ```
      tags:
        - SDK Coins
      security:
        - ApiKeyAuth: []
        - CustomerIdAuth: []
      responses:
        200:
          description: "Coin balance retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Coin balance retrieved successfully"
                  data:
                    type: object
                    properties:
                      balance:
                        type: number
                        description: "Current coin balance"
                        example: 25
                      total_earned:
                        type: number
                        description: "Total coins earned"
                        example: 50
                      total_spent:
                        type: number
                        description: "Total coins spent"
                        example: 25
                      recent_transactions:
                        type: array
                        description: "Recent coin transactions"
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "507f1f77bcf86cd799439011"
                            transaction_type:
                              type: string
                              enum: [earn, spend]
                              example: "earn"
                            coins:
                              type: number
                              example: 10
                            transaction_date:
                              type: string
                              format: date-time
                              example: "2024-03-20T10:00:00Z"
                            description:
                              type: string
                              example: "Converted from 1000 points"
        401:
          description: "Unauthorized - Invalid SDK API key or customer ID"
        500:
          description: "Internal Server Error" 