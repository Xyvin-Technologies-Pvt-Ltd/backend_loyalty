name: Deploy Loyalty Backend

on:
  push:
    branches:
      - main

jobs:
  deploy-backend:
    name: Deploy Backend to VPN Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy via SSH with Password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            set -e

            # Define variables
            PROJECT_DIR=loyalty-backend
            ENV_FILE_PATH=/home/ubuntu/loyalty/.env/.env.production
            IMAGE_NAME=loyalty-backend-img
            CONTAINER_NAME=loyalty-backend-container

            # Install git and docker if missing
            if ! command -v git &> /dev/null; then
              sudo apt update && sudo apt install -y git
            fi

            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker $USER
              newgrp docker
            fi

            # Clone or update repo
            if [ -d $PROJECT_DIR ]; then
              cd $PROJECT_DIR && git pull origin main
            else
              git clone https://github.com/${{ github.repository }} $PROJECT_DIR
              cd $PROJECT_DIR
            fi

            # Copy the environment file from the server path
            if [ -f "$ENV_FILE_PATH" ]; then
              cp $ENV_FILE_PATH .env
            else
              echo "‚ùå .env file not found at $ENV_FILE_PATH"
              exit 1
            fi

            # Build Docker image
            docker build -t $IMAGE_NAME .

            # Stop and remove existing container
            docker rm -f $CONTAINER_NAME || true

            # Run Docker container
            docker run -d \
              --name $CONTAINER_NAME \
              --restart always \
              -p 3000:3000 \
              --env-file .env \
              $IMAGE_NAME
